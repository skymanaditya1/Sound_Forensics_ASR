package com.aditya.weka;

import weka.clusterers.SimpleKMeans;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.converters.ConverterUtils.DataSource;

/**
 * Clustering is grouping of instances into clusters,
 * using a similarity measure, most commonly the 
 * Euclidean distance.
 * @author aditya
 *
 */

public class Clustering {

	public static String abs_path = "/home/aditya/CCBD_Sound_Internship/Sound_Forensics_ASR_Git/Weka";
	
	public static void main(String[] args) throws Exception{
		DataSource source = new DataSource(abs_path+"/weather.nominal.arff");
		Instances traindataset = source.getDataSet();
		
		SimpleKMeans cluster = new SimpleKMeans();
		
		cluster.setNumClusters(4); // by default 2
		cluster.buildClusterer(traindataset);
		
		System.out.println(cluster);
		
		Instance instance = traindataset.instance(0);
		
		System.out.println(cluster.clusterInstance(instance));
		// System.out.println(cluster.distributionForInstance(instance));
		double[] probs = cluster.distributionForInstance(instance);
		display(probs);
	}

	private static void display(double[] probs) {
		// TODO Auto-generated method stub
		for(int i=0; i<probs.length; i++)
			System.out.print(probs[i]+" ");
		System.out.println();
	}
}
